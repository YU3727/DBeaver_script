SELECT * FROM TAB;
COMMIT;

INSERT INTO BANK
VALUES (1, 'A');
INSERT INTO BANK
VALUES (2, 'B');
SELECT * FROM BANK;

INSERT INTO PRODUCT 
VALUES(1, 1, 'PRO1', 1, 'DET1');
INSERT INTO PRODUCT 
VALUES(2, 1, 'PRO2', 2, 'DET2');
INSERT INTO PRODUCT 
VALUES(3, 2, 'PRO3', 3, 'DET3');
INSERT INTO PRODUCT 
VALUES(4, 2, 'PRO4', 4, 'DET4');
SELECT * FROM PRODUCT;
ROLLBACK;

INSERT INTO "ROLE" 
VALUES (1, 'ADMIN');
INSERT INTO "ROLE" 
VALUES (2, 'MANAGER');
SELECT * FROM ROLE;
TRUNCATE TABLE ROLE;

INSERT INTO "MEMBER" 
VALUES ('ID1', 1, 'PW1', 'IU', '01011111111', 'mail1@naver.com');
INSERT INTO "MEMBER" 
VALUES ('ID2', 2, 'PW2', 'WINTER', '01022222222', 'mail2@naver.com');
SELECT * FROM MEMBER;
TRUNCATE TABLE MEMBER;

SELECT * FROM MEMBER_ROLE;
INSERT INTO MEMBER_ROLE 
VALUES ('ID1', 1);
INSERT INTO MEMBER_ROLE 
VALUES ('ID2', 2);
TRUNCATE TABLE MEMBER_ROLE;

--멤버-멤버롤은 아이디 같은거, 멤버롤-롤은 롤넘버 같은거 조인
SELECT M.MEMBERNAME , R.ROLENAME 
FROM "MEMBER" M
	INNER JOIN
	MEMBER_ROLE MR --아직 없는 테이블
	USING(MEMBERID)
	INNER JOIN
	ROLE R
	USING(ROLENUM)
WHERE MEMBERID = 'ID1';

--한명당 상품 2개씩 가입
INSERT INTO BANKBOOK 
VALUES('1234567', 'ID1', 1, 'OWNER_IU', sysdate);
INSERT INTO BANKBOOK 
VALUES('1234321', 'ID1', 2, 'OWNER_IU', sysdate);
INSERT INTO BANKBOOK 
VALUES('7654321', 'ID2', 3, 'OWNER_WINTER', sysdate);
INSERT INTO BANKBOOK 
VALUES('7654567', 'ID2', 4, 'OWNER_WINTER', sysdate);
SELECT * FROM BANKBOOK;

--DEAL에 TABLE 넣기, 잔액계산을 어떻게 해야할까
INSERT INTO DEAL
VALUES (sysdate, '1234567', 50000, 50000);

--잔액 표기
SELECT DEALDATE , BOOKNUM , MONEYFLOW , SUM(MONEYFLOW) OVER(ORDER BY DEALDATE) AS CALCULATE_BALANCE
FROM DEAL;
--이렇게 계산된 ROW별 잔액을 BALANCE 컬럼에 넣어야 하는데 어떻게 할까
--BALANCE의 초기값에는 0으로 기입(DEFAULT = 0)

--6번
SELECT B.BOOKNUM , P.PRODUCTNAME , P.INTEREST , D.BALANCE
FROM BANKBOOK B
	INNER JOIN
	PRODUCT P
	ON (B.PRODUCTNUM = P.PRODUCTNUM)
	INNER JOIN 
	DEAL D
	ON (B.BOOKNUM = D.BOOKNUM)
	INNER JOIN 
	"MEMBER" M 
	ON (M.MEMBERID = B.MEMBERID)
WHERE M.MEMBERID = 'ID1';

--7번 COUNT를 써야할거같은데
SELECT COUNT(MEMBERID) FROM MEMBER;

SELECT M.MEMBERNAME  --(SELECT COUNT(MEMBERID) FROM MEMBER) 이건아님
FROM "MEMBER" M
	INNER JOIN
	BANKBOOK B
	ON(M.MEMBERID = B.MEMBERID)
	INNER JOIN 
	PRODUCT P 
	ON(B.PRODUCTNUM = P.PRODUCTNUM)
WHERE P.PRODUCTNUM = 1;

--8번 특정상품의 총 금액
SELECT DISTINCT (SELECT SUM(MONEYFLOW) FROM DEAL) SUM_BALANCE --D.BALANCE 
FROM DEAL D
	INNER JOIN
	BANKBOOK B 
	ON (B.BOOKNUM = D.BOOKNUM)
	INNER JOIN 
	"MEMBER" M 
	ON (M.MEMBERID = B.MEMBERID)
WHERE B.PRODUCTNUM = 1;
--BALANCE로 계산 할거면 BOOKNUM(계좌번호)은 다른것 별로 DEATDATE는 최신인거만 뺴와서 계산

INSERT INTO BANKBOOK 
VALUES('4567890', 'ID2', 1, 'OWNER_WINTER', sysdate);
SELECT * FROM BANKBOOK;
INSERT INTO DEAL
VALUES (sysdate, '1234567', -30000, 170000);
SELECT * FROM DEAL;
COMMIT;
ROLLBACK;

SELECT SUM(BALANCE) FROM DEAL ;

--9번 계좌별로 입 > 출 > 입 > 출 순서대로 정보 입력
--잔액표기 위에꺼 생각해본거 참고하기.
SELECT * FROM DEAL;
INSERT INTO DEAL
VALUES (sysdate, '1234567', -40000, 80000);